import type { Language } from '@vue/language-core';
import type * as ts from 'typescript';
export interface Request {
    type: 'containsFile' | 'projectInfo' | 'collectExtractProps' | 'getImportPathForFile' | 'getPropertiesAtLocation' | 'getQuickInfoAtPosition' | 'getComponentProps' | 'getComponentEvents' | 'getTemplateContextProps' | 'getComponentNames' | 'getElementAttrs';
    args: [fileName: string, ...rest: any];
}
export interface ProjectInfo {
    name: string;
    kind: ts.server.ProjectKind;
    currentDirectory: string;
}
export declare function startNamedPipeServer(ts: typeof import('typescript'), info: ts.server.PluginCreateInfo, language: Language<string>, projectKind: ts.server.ProjectKind.Inferred | ts.server.ProjectKind.Configured): Promise<void>;
